/**
 * @license
 * (c) Copyright 2022 Grammarly, Inc.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @public
 */
declare interface BaseSuggestion {
    /**
     * A unique identifier for the suggestion.
     * @public
     */
    id: SuggestionId$1;
    /**
     * The category of suggestion.
     * @public
     */
    type: SuggestionType;
    /**
     * A human-readable label. Example: "Change your spelling"
     * @public
     */
    title: string;
    /**
     * Reasoning and detail behind the suggestion.
     * @public
     */
    description: Markup;
}

/**
 * Identifier used to authenticate with Grammarly.
 *
 * @public
 */
declare type ClientId = string;

/**
 * Configuration to customize the Grammarly integration.
 *
 * @public
 * @since v1.6.3
 */
declare type Config = Pick<EditorConfig, "collectUserFeedback" | "documentDialect" | "documentDomain" | "introText" | "oauthRedirectUri" | "suggestions" | "showToneDetector" | "autocomplete" | "toneDetector" | "userFeedback">;

/**
 * Specific variety of English being written.
 *
 * @remarks
 * Use "auto-text" to choose an appropriate value based on the user's written text.
 *
 * Use "auto-browser" to choose an appropriate value based on the user's browser locale.
 *
 * Note that the user can override this setting in the Grammarly button menu.
 *
 * See {@link https://support.grammarly.com/hc/en-us/articles/115000089992-Select-between-British-English-American-English-Canadian-English-and-Australian-English | this article} for differences.
 *
 * @public
 */
declare type Dialect = "american" | "british" | "canadian" | "australian"
/** @since v1.3.0 */
| "auto-text"
/** @since v1.3.0 */
| "auto-browser"
/** @deprecated since v1.3.0 - Use "auto-browser" instead */
| "auto";

/**
 * Characteristics and context of the document that inform Grammarly suggestions.
 *
 * @public
 * @deprecated since v1.6.7
 */
declare interface DocumentConfig {
    /**
     * Which English dialect should be assumed?
     * @deprecated since v1.6.7 - Moved to {@link EditorConfig} as `documentDialect`
     */
    dialect?: Dialect;
    /**
     * What is the style or type of writing?
     * @defaultValue "general"
     * @deprecated since v1.6.7 - Moved to {@link EditorConfig} as `documentDomain`
     */
    domain?: Domain;
}

/**
 * Statistics about the user-entered text.
 *
 * @public
 * @since v1.9.0
 */
declare interface DocumentStats {
    /** Current number of characters, including whitespace. */
    charsCount: number;
    /** Current number of words. */
    wordsCount: number;
    /** Current number of suggestions. */
    suggestionsCount: number;
    /**
     * Readability score using the Flesch reading-ease test.
     *
     * Higher scores indicate material that is easier to read.
     * The range for typical text is 0 - 100, but we surface the exact amount even if lower or higher.
     */
    readabilityScore: number;
    /** Expected time needed by an average reader to read the text (250 wpm). */
    readingTime: Time;
    /** Expected time needed by an average speaker to speak the text aloud (130 wpm). */
    speakingTime: Time;
}

/**
 * The style or type of writing to be checked.
 *
 * @remarks
 * See {@link https://support.grammarly.com/hc/en-us/articles/115000091472-What-is-domain-document-type- | What is domain/document type?}
 *
 * @public
 */
declare type Domain = "academic" | "business" | "general" | "mail" | "casual" | "creative";

/**
 * Configuration to customize the Grammarly integration per editor instance.
 *
 * @public
 */
declare interface EditorConfig {
    /**
     * Which English dialect should be assumed?
     *
     * {@link https://codesandbox.io/s/github/grammarly/grammarly-for-developers/tree/main/examples/editor-sdk-document-dialect?file=/public/index.html | Try it out}
     *
     * @defaultValue "auto-text"
     * @since v1.6.3
     * @public
     */
    documentDialect?: Dialect;
    /**
     * What is the style or type of writing?
     *
     * {@link https://codesandbox.io/s/github/grammarly/grammarly-for-developers/tree/main/examples/editor-sdk-document-domain?file=/public/index.html | Try it out}
     *
     * @defaultValue "general"
     * @since v1.6.3
     * @public
     */
    documentDomain?: Domain;
    /**
     * Context of the input document that informs Grammarly suggestions.
     * @public
     * @deprecated since v1.6.7
     */
    document?: DocumentConfig;
    /**
     * Categories of suggestions that can be muted.
     *
     * {@link https://codesandbox.io/s/github/grammarly/grammarly-for-developers/tree/main/examples/editor-sdk-suggestions-config?file=/public/index.html | Try it out}
     *
     * @public
     * @deprecated since v1.9.2 - use `suggestionCategories` instead
     */
    suggestions?: SuggestionCategoriesDeprecated;
    /**
     * Categories of suggestions that can be muted.
     *
     * {@link https://codesandbox.io/s/github/grammarly/grammarly-for-developers/tree/main/examples/editor-sdk-suggestions-config?file=/public/index.html | Try it out}
     *
     * @public
     */
    suggestionCategories?: SuggestionCategories;
    /**
     * Collect user feedback after the user takes action on 5 suggestions.
     *
     * @remarks
     * We will not request feedback more than once in a 30 day period.
     *
     * @defaultValue true
     * @public
     * @deprecated since v1.8.3 - Use `userFeedback`
     */
    collectUserFeedback?: boolean;
    /**
     * Collect user feedback after the user takes action on 5 suggestions.
     *
     * @remarks
     * We will not request feedback more than once in a 30 day period.
     *
     * @defaultValue "on"
     * @public
     * @since v1.8.3
     */
    userFeedback?: "on" | "off";
    /**
     * Text shown to introduce first-time users to Grammarly.
     *
     * @remarks
     * This introductory text shows in the footer of suggestion cards until the user first accepts
     * or dismisses a suggestion.
     *
     * {@link https://codesandbox.io/s/github/grammarly/grammarly-for-developers/tree/main/examples/editor-sdk-intro-text?file=/public/index.html | Try it out}
     *
     * @defaultValue "Grammarly helps you write clearly and mistake-free."
     * @since v1.6.3
     * @public
     */
    introText?: string;
    /**
     * Show the tone detector interface (beside the Grammarly button).
     *
     * @remarks
     * Note that tone detection requires a text of at least 150 characters.
     *
     * @defaultValue false
     * @public
     * @deprecated since v1.8.3 - Use `toneDetector`
     */
    showToneDetector?: boolean;
    /**
     * Show the tone detector interface (beside the Grammarly button).
     *
     * @remarks
     * Note that tone detection requires a text of at least 150 characters.
     *
     * @defaultValue "off"
     * @public
     * @since v1.8.3
     */
    toneDetector?: "on" | "off";
    /**
     * Offer to complete phrases for your users as they type. {@link https://developer.grammarly.com/docs/autocomplete | Learn more}
     *
     * @remarks
     * Autocomplete is not currently supported for `<input>` fields.
     *
     * If you have a Content Security Policy (CSP), you will need to update it as described
     * {@link https://developer.grammarly.com/docs/faq#how-do-i-add-grammarly-to-my-content-security-policy-csp | here}.
     *
     * {@link https://codesandbox.io/s/github/grammarly/grammarly-for-developers/tree/main/examples/editor-sdk-autocomplete?file=/public/index.html | Try it out}
     *
     * @defaultValue "off"
     * @public
     * @since v1.7.0
     */
    autocomplete?: "on" | "off";
    /**
     * URI to redirect to after successful account connection.
     *
     * @public
     * @since v1.6.3
     */
    oauthRedirectUri?: string;
    /**
     * OAuth assertion to verify ownership of the clientId.
     *
     * @beta
     * @since v1.9.0
     */
    oauthAssertionProvider?: string | (() => Promise<{
        assertion: string;
    }>);
    /**
     * Configuration for the user interface of Grammarly.
     * @deprecated since v1.6.7
     */
    ui?: UIConfig;
    /**
     * Configuration for connected accounts.
     * @deprecated since v1.6.7
     */
    oauth?: OAuthConfig;
    /**
     * Show suggestion cards when a user hovers over a suggestion underline.
     *
     *
     * @defaultValue "on"
     * @public
     * @since v1.9.0
     */
    suggestionCards?: "on" | "off";
    /**
     * Show underlines for suggestions.
     *
     *
     * @defaultValue "on"
     * @public
     * @since v1.9.2
     */
    underlines?: "on" | "off";
    /**
     * Callback to receive stats about the user-entered text and Grammarly session.
     * @deprecated since v1.9.0 - use `document-stats` or `session-stats` events instead.
     */
    onTextStats?: (stats: TextStats) => void;
    /**
     * Triggered when the user consciously disables the plugin. Not triggered again once already disabled.
     * @deprecated since v1.9.0 - use plugin-turned-off event
     */
    onPluginDisable?: (reason: PluginDisableReason) => void;
    /**
     * Callback triggered on fatal error with the plugin.
     * @deprecated since v1.9.0 - use plugin-error event
     */
    onPluginError?: (error: Error) => void;
}

/**
 * Custom event
 *
 * @public
 */
declare class Event_2<T> {
    /**
     * Event name
     *
     * @public
     */
    readonly type: string;
    /**
     * Event payload
     *
     * @public
     */
    readonly detail: T;
    constructor(name: string, detail: T);
}


/**
 * Emits events much like Node's {@link https://nodejs.org/docs/latest/api/events.html#events_class_eventemitter | EventEmitter}.
 *
 * @remarks
 * ```ts
 * editor.addEventListener("openOAuthUrl", event => {
 *   const url = event.detail
 *   // ...
 * })
 * ```
 * The variable `editor` is an instance of Editor which implements {@link EventEmitter} interface.
 *
 * @public
 */
declare class EventEmitter<T> implements Disposable {
    private _listeners;

    /**
     * Register a function to be called whenever a specified event is emitted.
     *
     * @public
     */
    addEventListener<E extends string & keyof T>(event: E, listener: EventListener_2<T[E]>): void;
    /**
     * Remove a previously added listener function.
     *
     * @public
     */
    removeEventListener<E extends string & keyof T>(event: E, listener: EventListener_2<T[E]>): void;



}

/**
 * Event handler callback
 *
 * @public
 */
declare type EventListener_2<T> = (event: Event_2<T>) => void | Promise<void>;


/**
 * Initialize Grammarly and start using {@link SDK}.
 *
 * @param clientId - The {@link ClientId} for authentication
 * @param config - Shared global config
 *
 * @public
 */
declare function init(clientId: ClientId, config?: Config): Promise<SDK>;

/**
 * @public
 */
declare type InsertOperation<T extends string | Record<string, unknown> = string | Record<string, unknown>> = {
    /** Text to insert */
    insert: T;
    /** Metadata or semantics for the operation */
    attributes?: AttributeMap;
};

declare interface ITextRange {
    start: number;
    end: number;
}

/**
 * A list of {@link MarkupChild}.
 *
 * @public
 */
declare type Markup = MarkupChild[];

/**
 * Semantic markup like HTML but easier to parse and restricted to an allow list.
 *
 * @public
 */
declare type MarkupChild = string | {
    type: "strong" | "em" | "ul" | "li" | "del" | "ins";
    children: MarkupChild[];
};

/**
 * Configuration for connected accounts
 *
 * @public
 * @deprecated since v1.6.7
 */
declare interface OAuthConfig {
    /**
     * URI to redirect to after successful account connection.
     *
     * @public
     * @deprecated since v1.6.7 - Moved to {@link EditorConfig} as `oauthRedirectUri`
     */
    redirectUri: string;
}

/**
 * Provides more detail when the plugin is disabled by a user.
 *
 * @remarks
 * Clarifies whether the user disabled the plugin for the current session only
 * or for all future sessions?
 * In either case, the user can change their mind later.
 *
 * @public
 * @deprecated since v1.9.0

 */
declare type PluginDisableReason = "user-next-visit" | "user-forever";

/**
 * Rich text format for representing documents and changes (based on {@link https://quilljs.com/docs/delta/ | Quill's delta }).
 *
 * @public
 */
declare interface RichText {
    /** A list of {@link InsertOperation} representing a document or change. */
    ops: InsertOperation[];
}

/**
 * Metadata or semantics for an {@link InsertOperation}.
 *
 * @public
 */
declare type RichTextAttributes = AttributeMap;

/**
 * Establishes a connection with Grammarly and creates {@link Session}s for further interaction.
 *
 * @public
 */
declare class SDK extends EventEmitter<SDKEvents> {
    #private;


    /**
     * Check text with Grammarly.
     *
     * @param text - Text to be checked
     * @returns A {@link Session} for subsequent interactions
     */
    withText<T extends string | RichText>(text: T, config?: EditorConfig): Session<T>;
    /**
     * Process OAuth callback and complete account connection.
     *
     * @public
     * @since v1.7.3
     */
    handleOAuthCallback(url: string): Promise<void>;


}

declare type SDKEvents = {
    isUserAccountConnected: boolean;
};

/**
 * Events emitted by {@link Session}.
 * @public
 */
declare type SessionEvents = {




};

/**
 * Statistics about the Grammarly session.
 *
 * @public
 */
declare interface SessionStats {
    /** Duration of the editing session, in seconds. */
    duration: number;
    /** Total words checked during the session. */
    wordsChecked: number;
    /** Suggestions provided by Grammarly. */
    suggestionsSent: SessionSuggestionBreakdown;
    /** Suggestions accepted by user. */
    suggestionsAccepted: SessionSuggestionBreakdown;
}

/**
 * Suggestion total along with counts by type.
 *
 * @public
 */
declare interface SessionSuggestionBreakdown {
    total: number;
    correctness: number;
    delivery: number;
    clarity: number;
    engagement: number;
}

/**
 * Categories of suggestions that can be muted.
 *
 * @remarks
 * "off" means any suggestions belonging to that category will be "muted" (not visible to the user)
 *
 * @public
 */
declare interface SuggestionCategories {
    /**
     * Suggests alternatives to words that occur frequently in the same paragraph.
     *
     * @defaultValue "on"
     */
    variety?: "on" | "off";
    /**
     * Suggests alternatives to bland and overused words such as "good" and "nice".
     *
     * @defaultValue "on"
     */
    vocabulary?: "on" | "off";
    /**
     * Suggests ways to sound more natural and fluent.
     *
     * @defaultValue "on"
     */
    fluency?: "on" | "off";
    /**
     * Suggests adding the Oxford comma after the second-to-last item in a list of things.
     *
     * @defaultValue "off"
     */
    oxfordComma?: "on" | "off";
    /**
     * Flags unnecessary use of ellipses (...).
     *
     * @defaultValue "off"
     */
    unnecessaryEllipses?: "on" | "off";
    /**
     * Suggests placing punctuation before closing quotation marks.
     *
     * @defaultValue "on"
     */
    punctuationWithQuotation?: "on" | "off";
    /**
     * Suggests completing all incomplete sentences, including stylistic sentence fragments that may be intentional.
     *
     * @defaultValue "off"
     */
    stylisticFragments?: "on" | "off";
    /**
     * Flags use of personal pronouns such as "I" and "you" in academic writing.
     *
     * @defaultValue "off"
     */
    informalPronounsAcademic?: "on" | "off";
    /**
     * Flags use of conjunctions such as "but" and "and" at the beginning of sentences.
     *
     * @defaultValue "off"
     */
    conjunctionAtStartOfSentence?: "on" | "off";
    /**
     * Flags use of prepositions such as "with" and "in" at the end of sentences.
     *
     * @defaultValue "off"
     */
    prepositionAtTheEndOfSentence?: "on" | "off";
    /**
     * Suggests rewriting split infinitives so that an adverb doesn't come between "to" and the verb.
     *
     * @defaultValue "on"
     */
    splitInfinitive?: "on" | "off";
    /**
     * Suggests adding missing spacing after a numeral when writing times.
     *
     * @defaultValue "on"
     */
    missingSpaces?: "on" | "off";
    /**
     * Flags use of passive voice.
     *
     * @defaultValue "off"
     */
    passiveVoice?: "on" | "off";
    /**
     * Flags long, complicated sentences that could potentially confuse your reader.
     *
     * @defaultValue "on"
     */
    readabilityFillerWords?: "on" | "off";
    /**
     * Suggests splitting long, complicated sentences that could potentially confuse your reader.
     *
     * @defaultValue "on"
     */
    readabilityTransforms?: "on" | "off";
    /**
     * Suggests using person-first language to refer respectfully to an individual with a disability.
     *
     * @defaultValue "on"
     */
    personFirstLanguage?: "on" | "off";
    /**
     * Suggests alternatives to potentially gender-biased and non-inclusive phrasing.
     *
     * @defaultValue "on"
     */
    possiblyBiasedLanguageGenderRelated?: "on" | "off";
    /**
     * Flags LGBTQIA+-related terms that may be seen as biased, outdated, or disrespectful in some contexts.
     *
     * @defaultValue "on"
     */
    possiblyBiasedLanguageLGBTQIARelated?: "on" | "off";
    /**
     * Suggests alternatives to language that may be considered politically incorrect.
     *
     * @defaultValue "on"
     */
    possiblyPoliticallyIncorrectLanguage?: "on" | "off";
    /**
     * Suggests alternatives to potentially biased language related to race and ethnicity.
     *
     * @defaultValue "on"
     */
    possiblyBiasedLanguageRaceEthnicityRelated?: "on" | "off";
    /**
     * Suggests alternatives to potentially biased language related to older adults.
     *
     * @defaultValue "on"
     */
    possiblyBiasedLanguageAgeRelated?: "on" | "off";
    /**
     * Suggests alternatives to potentially ableist language.
     *
     * @defaultValue "on"
     */
    possiblyBiasedLanguageDisabilityRelated?: "on" | "off";
    /**
     * Suggests alternatives to potentially biased language related to parenting and family systems.
     *
     * @example
     * Quinn hoped to meet their \{ real father  =\> birth father \} one day.
     *
     * @defaultValue "on"
     */
    possiblyBiasedLanguageFamilyRelated?: "on" | "off";
    /**
     * Suggests spelling out numbers zero through ten.
     *
     * @defaultValue "on"
     */
    numbersZeroThroughTen?: "on" | "off";
    /**
     * Suggests spelling out numbers at the beginning of sentences.
     *
     * @defaultValue "on"
     */
    numbersBeginningSentences?: "on" | "off";
    /**
     * Flags a series of nouns that modify a final noun.
     *
     * @example
     * The \{store manager policy handbook update meeting \} is tomorrow.
     *
     * @defaultValue "on"
     */
    nounStrings?: "on" | "off";
    /**
     * Flags series of sentences that follow the same pattern.
     *
     * @example
     * I read an interesting book recently. It was about computers. I usually read novels.
     *
     * @defaultValue "on"
     */
    sentenceVariety?: "on" | "off";
    /**
     * Suggests removing extra spaces surrounding a slash.
     *
     * @example
     * I just wanted to send a \{ reminder / follow-up  =\> reminder/follow-up \}.
     *
     * @defaultValue "on"
     */
    spacesSurroundingSlash?: "on" | "off";
    /**
     * Suggests alternatives to language related to human slavery.
     *
     * @example
     * My professor wrote a book about \{ slaves  =\> enslaved people \} in America.
     *
     * @defaultValue "on"
     */
    possiblyBiasedLanguageHumanRights?: "on" | "off";
    /**
     * Suggests alternatives to terms with origins in the institution of slavery.
     *
     * @example
     * The apartment’s \{ master  =\> main|primary \} bedroom has a view of the sea.
     *
     * @defaultValue "on"
     */
    possiblyBiasedLanguageHumanRightsRelated?: "on" | "off";
}

/**
 * Categories of suggestions that can be muted.
 *
 * @public
 * @deprecated since v1.9.2 - use `SuggestionCategories` instead
 */
declare interface SuggestionCategoriesDeprecated {
    /**
     * Suggests alternatives to words that occur frequently in the same paragraph.
     *
     * @defaultValue true
     */
    Variety?: boolean;
    /**
     * Suggests alternatives to bland and overused words such as "good" and "nice".
     *
     * @defaultValue true
     */
    Vocabulary?: boolean;
    /**
     * Suggests ways to sound more natural and fluent.
     *
     * @defaultValue true
     */
    Fluency?: boolean;
    /**
     * Suggests adding the Oxford comma after the second-to-last item in a list of things.
     *
     * @defaultValue false
     */
    OxfordComma?: boolean;
    /**
     * Flags unnecessary use of ellipses (...).
     *
     * @defaultValue false
     */
    UnnecessaryEllipses?: boolean;
    /**
     * Suggests placing punctuation before closing quotation marks.
     *
     * @defaultValue true
     */
    PunctuationWithQuotation?: boolean;
    /**
     * Suggests completing all incomplete sentences, including stylistic sentence fragments that may be intentional.
     *
     * @defaultValue false
     */
    StylisticFragments?: boolean;
    /**
     * Flags use of personal pronouns such as "I" and "you" in academic writing.
     *
     * @defaultValue false
     */
    InformalPronounsAcademic?: boolean;
    /**
     * Flags use of conjunctions such as "but" and "and" at the beginning of sentences.
     *
     * @defaultValue false
     */
    ConjunctionAtStartOfSentence?: boolean;
    /**
     * Flags use of prepositions such as "with" and "in" at the end of sentences.
     *
     * @defaultValue false
     */
    PrepositionAtTheEndOfSentence?: boolean;
    /**
     * Suggests rewriting split infinitives so that an adverb doesn't come between "to" and the verb.
     *
     * @defaultValue true
     */
    SplitInfinitive?: boolean;
    /**
     * Suggests adding missing spacing after a numeral when writing times.
     *
     * @defaultValue true
     */
    MissingSpaces?: boolean;
    /**
     * Flags use of passive voice.
     *
     * @defaultValue false
     */
    PassiveVoice?: boolean;
    /**
     * Flags long, complicated sentences that could potentially confuse your reader.
     *
     * @defaultValue true
     */
    ReadabilityFillerwords?: boolean;
    /**
     * Suggests splitting long, complicated sentences that could potentially confuse your reader.
     *
     * @defaultValue true
     */
    ReadabilityTransforms?: boolean;
    /**
     * Suggests using person-first language to refer respectfully to an individual with a disability.
     *
     * @defaultValue true
     */
    PersonFirstLanguage?: boolean;
    /**
     * Suggests alternatives to potentially gender-biased and non-inclusive phrasing.
     *
     * @defaultValue true
     */
    PossiblyBiasedLanguageGenderRelated?: boolean;
    /**
     * Flags LGBTQIA+-related terms that may be seen as biased in some contexts.
     *
     * @deprecated Use `PossiblyBiasedLanguageLgbtqiaRelated` instead
     * @defaultValue true
     */
    PossiblyBiasedLanguageLgbtRelated?: boolean;
    /**
     * Flags LGBTQIA+-related terms that may be seen as outdated, clinical, or not fully accepted in some contexts.
     *
     * @deprecated Use `PossiblyBiasedLanguageLgbtqiaRelated` instead
     * @defaultValue true
     */
    PossiblyOutdatedLanguageLgbtRelated?: boolean;
    /**
     * Flags LGBTQIA+-related terms that may be seen as biased, outdated, or disrespectful in some contexts.
     *
     * @defaultValue true
     */
    PossiblyBiasedLanguageLgbtqiaRelated?: boolean;
    /**
     * Flags reclaimed LGBTQIA+-related terms that may still be seen as disrespectful in some contexts.
     *
     * @deprecated Use `PossiblyBiasedLanguageLgbtqiaRelated` instead
     * @defaultValue true
     */
    ReclaimedLanguage?: boolean;
    /**
     * Suggests alternatives to potentially biased or outdated descriptions.
     *
     * @deprecated Use more specific categories like `PossiblyBiasedLanguageDisabilityRelated` instead
     * @defaultValue true
     */
    PossiblyBiasedLanguage?: boolean;
    /**
     * Suggests alternatives to language that may be considered politically incorrect.
     *
     * @defaultValue true
     */
    PossiblyPoliticallyIncorrectLanguage?: boolean;
    /**
     * Suggests alternatives to potentially biased language related to race and ethnicity.
     *
     * @defaultValue true
     */
    PossiblyBiasedLanguageRaceEthnicityRelated?: boolean;
    /**
     * Suggests alternatives to potentially biased language related to older adults.
     *
     * @defaultValue true
     */
    PossiblyBiasedLanguageAgeRelated?: boolean;
    /**
     * Suggests alternatives to potentially ableist language.
     *
     * @defaultValue true
     */
    PossiblyBiasedLanguageDisabilityRelated?: boolean;
    /**
     * Suggests alternatives to potentially biased language related to parenting and family systems.
     *
     * @example
     * Quinn hoped to meet their \{ real father  =\> birth father \} one day.
     *
     * @defaultValue true
     */
    PossiblyBiasedLanguageFamilyRelated?: boolean;
    /**
     * Suggests spelling out numbers zero through ten.
     *
     * @defaultValue true
     */
    NumbersZeroThroughTen?: boolean;
    /**
     * Suggests spelling out numbers at the beginning of sentences.
     *
     * @defaultValue true
     */
    NumbersBeginningSentences?: boolean;
    /**
     * Flags a series of nouns that modify a final noun.
     *
     * @example
     * The \{store manager policy handbook update meeting \} is tomorrow.
     *
     * @defaultValue true
     */
    NounStrings?: boolean;
    /**
     * Flags series of sentences that follow the same pattern.
     *
     * @example
     * I read an interesting book recently. It was about computers. I usually read novels.
     *
     * @defaultValue true
     */
    SentenceVariety?: boolean;
    /**
     * Suggests removing extra spaces surrounding a slash.
     *
     * @example
     * I just wanted to send a \{ reminder / follow-up  =\> reminder/follow-up \}.
     *
     * @defaultValue true
     */
    SpacesSurroundingSlash?: boolean;
    /**
     * Suggests alternatives to language related to human slavery.
     *
     * @example
     * My professor wrote a book about \{ slaves  =\> enslaved people \} in America.
     *
     * @defaultValue true
     */
    PossiblyBiasedLanguageHumanRights?: boolean;
    /**
     * Suggests alternatives to terms with origins in the institution of slavery.
     *
     * @example
     * The apartment’s \{ master  =\> main|primary \} bedroom has a view of the sea.
     *
     * @defaultValue true
     */
    PossiblyBiasedLanguageHumanRightsRelated?: boolean;
}

/**
 * A range of text represented by start and end offsets.
 * Ranges are half open intervals [start, end), that means
 * end is not included.
 *
 * @public
 */
declare class TextRange implements ITextRange {
    /** Start offset of range (begins at 0). */
    readonly start: number;
    /** End offset of range. */
    readonly end: number;
    constructor(start: number, end: number);
    /** Stringify the range. */
    toString(): string;
    /** Check if two ranges are equal. */
    static equals(a: TextRange, b: TextRange): boolean;
    /**
     * Check if range `a` fully contains range `b`
     * @param endInclusive - if true, we consider the ranges as closed intervals [start, end]. This
     *                       can be useful when comparing highlight ranges with text ranges.
     * @returns
     */
    static contains(a: TextRange, b: TextRange, endInclusive?: boolean): boolean;
}

/**
 * Statistics about the user-entered text.
 *
 * @public
 * @deprecated since v1.9.0 - use DocumentStats or SessionStats
 */
declare interface TextStats extends DocumentStats {
    /**
     * Current number of suggestions.
     * @since v1.7.4
     */
    suggestionsCount: number;
    /** Stats about the overall session. */
    session: SessionStats;
}

/**
 * Time in hours, minutes, and seconds.
 *
 * @public
 */
declare interface Time {
    /** Hours */
    h: number;
    /** Minutes */
    m: number;
    /** Seconds */
    s: number;
}

/**
 * Configuration for the user interface of Grammarly.
 *
 * @public
 * @deprecated since v1.6.7
 */
declare interface UIConfig {
    /**
     * Text shown to introduce first-time users to Grammarly.
     *
     * @remarks
     * This introductory text shows in the footer of the first shown suggestion card
     * as well as in the Grammarly button menu.
     *
     * @defaultValue "Grammarly helps you write clearly and mistake-free."
     * @deprecated since v1.6.7 - Moved to {@link EditorConfig}
     */
    introText?: string;
    /**
     * Show the tone detector interface (beside the Grammarly button).
     * @defaultValue false
     *
     * @remarks
     * Note that tone detection requires a text of at least 150 characters.
     *
     * @deprecated since v1.6.7 - Moved to {@link EditorConfig}
     */
    showToneDetector?: boolean;
}

export { BaseSuggestion, ClientId, Config, Dialect, DocumentStats, EditorConfig, Event_2 as Event, EventEmitter, EventListener_2 as EventListener, InsertOperation, Markup, MarkupChild, PluginDisableReason, RichText, RichTextAttributes, SDK, SessionEvents, SessionStats, SuggestionCategories, SuggestionCategoriesDeprecated, TextRange, TextStats, init };
