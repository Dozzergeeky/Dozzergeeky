import Parser from 'web-tree-sitter';

/** 
 * 
 * @packageDocumentation
 * @license
 * (c) Copyright 2021 Grammarly, Inc.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @alpha
 */
interface AttributeMapRaw {
    bold: boolean;
    italic: boolean;
    underline: boolean;
    code: boolean;
    link: string;
    list: "number" | "bullet";
    indent: number;
    header: 1 | 2 | 3 | 4 | 5 | 6;
    "code-block": boolean;
    linebreak: boolean;
}
/**
 * @alpha
 */
declare type AttributeMap = {
    [P in keyof AttributeMapRaw]?: AttributeMapRaw[P];
};

/**
 * @public
 */
declare type InsertOperation<T extends string | Record<string, unknown> = string | Record<string, unknown>> = {
    /** Text to insert */
    insert: T;
    /** Metadata or semantics for the operation */
    attributes?: AttributeMap;
};

/**
 * Rich text format for representing documents and changes (based on {@link https://quilljs.com/docs/delta/ | Quill's delta }).
 *
 * @public
 */
interface RichText {
    /** A list of {@link InsertOperation} representing a document or change. */
    ops: InsertOperation[];
}

declare type SourceMap = Array<[original: number, generated: number, length: number]>;
interface Transformer {
    encode(tree: Parser.Tree): [RichText, SourceMap];
    decode(text: RichText): string;
}

declare function createParser(language: string): Promise<Parser>;
declare const transformers: {
    readonly html: Transformer;
    readonly markdown: Transformer;
};

export { SourceMap, Transformer, createParser, transformers };
